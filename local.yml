version: "3"

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: redirink_local_django
    container_name: django
    depends_on:
      - postgres
      - mailhog
      - traefik
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
      - ./.envs/.secret
    expose:
      - 8000
      - 5000 # debug server for VS Code
    command: python manage.py runserver 0.0.0.0:8000
    labels:
      - traefik.enable=true
      # - traefik.http.routers.django.rule=Host(`django`)
      # TODO: regex pattern for short ULRs matching
      # Server: api, static files, admin
      - >
        traefik.http.routers.django.rule=
        PathPrefix(`/api`) ||
        PathPrefix(`/static`) || PathPrefix(`/media`) ||
        PathPrefix(`/admin`)
      - traefik.http.routers.django.entryPoints=web # :80/:443 entrypoints
      - traefik.http.services.django.loadbalancer.server.port=8000

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: redirink_production_postgres
    container_name: redirink_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  docs:
    image: redirink_local_docs
    container_name: docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.secret
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./redirink:/app/redirink:z
    ports:
      - "7000:7000"
    command: /start-docs

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    # Note: mailhog image exposes 8025 by default
    labels:
      - traefik.enable=true
      - traefik.http.routers.mailhog.rule=PathPrefix(`/`)
      - traefik.http.routers.mailhog.entryPoints=mailhog
      # - traefik.http.routers.mailhog.rule=Host(`mailhog`) # Set Host header value to mailhog:80 on http://localhost:80

  redis:
    image: redis:6
    container_name: redis

  celeryworker:
    <<: *django
    image: redirink_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: redirink_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: redirink_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: redirink_local_node
    container_name: node
    depends_on:
      - django
    volumes:
      - .:/app:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - "3000:3000"
      # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
      - "3001:3001"

  # Client + dashboard
  react:
    build:
      context: .
      dockerfile: ./compose/local/react/Dockerfile
    image: redirink_local_react
    container_name: react
    depends_on:
      - django
    volumes:
      - ./dashboard:/app:z
      - ./client:/app/client:z # keen client in seperate shared volume
      - /app/node_modules # don't overried installed modules
    command: npm start 0.0.0.0:3000
    expose:
      - 3000
      - 3001
    labels:
      - traefik.enable=true
      - traefik.http.routers.react.rule=PathPrefix(`/`)
      - traefik.http.routers.react.entryPoints=web
      - traefik.http.services.react.loadbalancer.server.port=3000

  # Build react static files
  # reactbuild:
  # TODO

  traefik:
    build:
      context: .
      dockerfile: ./compose/local/traefik/Dockerfile
    image: redirink_local_traefik
    container_name: traefik
    volumes:
      - ./compose/local/traefik/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "0.0.0.0:8888:80" # http
      - "443:443" # https
      - "8088:8080" # dashboard
      - "8025:8025" # mailhog
      # - "5555:5555" # flower

  telegram:
    build:
      context: .
      dockerfile: ./compose/local/telegram/Dockerfile
    image: redirink_local_telegram
    container_name: redirink_local_telegram
    volumes:
      - ./telegram:/app
    env_file:
      - ./telegram/bot/.env
    command: /start
